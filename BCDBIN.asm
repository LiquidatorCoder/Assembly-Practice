.MODEL SMALL
.STACK 100H

.DATA

MSG1 DB "THE VALUE IN BINARY IS = $"

.CODE

MOV AX,@DATA
MOV DS,AX

XOR AX, AX ; clear register AX
XOR DX, DX

MOV DL, 26

MOV BL, DL
AND BL, 0FH
MOV AL, DL
AND AL, 0F0H

MOV CL, 04H
ROR AL, CL
MOV DL, 0AH
MUL DL
ADD AL, BL

PUSH 	AX

MOV 	DX, 	OFFSET MSG1
MOV 	AH,	09H
INT 	21H ; INT STANDS FOR INTERRUPT INSTRUCTION 21H IS INTERRUPT NO FOR DOS SERVICES

POP	 AX
	
CALL 	DISPLAY

MOV 	AH,	4CH
INT 	21H

DISPLAY PROC NEAR ; PROC IS KEYWORD FOR PROCEDURE
MOV 	CH,	04H
MOV 	CL,	04H
DISP1:
ROL 	AX,	CL ; ROTATE LEFT  4 TIMES
PUSH 	AX ; SAVING ON STACK
AND 	AL,	0FH
ADD 	AL,	30H ; 48 IN DECIMAL
CMP 	AL,	'9' ; COMPARE WITH ASCII VALUE OF 9
JBE 	DISP2
ADD 	AL,	7
DISP2:	MOV 	DL,	AL
MOV 	AH,	02H
INT 	21H
POP 	AX
DEC 	CH
JNZ 	DISP1
RET
DISPLAY 	ENDP
END

; .MODEL SMALL
; .STACK 100H

; .DATA

; MSG1 DB "THE VALUE IN BINARY IS = $"
; NO1 DB "9036"
; D2 DB ?
; D1 DB 16 DUP(?)

; .CODE

; MOV AX,@DATA
; MOV DS,AX

; LEA SI, NO1
; LEA DI, D1
; MOV CX, 04H
; TOP:
; MOV AL, [SI]
; MOV DX, 0CH
; UP1:
; ROL AX,1
; DEC DX
; JNZ UP1
; AND AX, 1111000000000000B
; MOV DX, 04H
; UP2:
; ROL AX, 1
; JNC DN
; MOV BX, 1
; MOV [DI], BX
; JMP DN2
; DN:
; MOV BX, 0
; MOV [DI], BX
; DN2:
; INC DI
; DEC DX
; JNZ UP2
; INC SI
; DEC CX
; JNZ TOP
; INT 3
; MOV 	AH,	4CH
; INT 	21H
; END